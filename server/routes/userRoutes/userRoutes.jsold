
var express = require('express');
var router = express.Router();
var auth = require("../../controllers/AuthController.js");
/*const express = require('express');
const router = express.Router();
const bcrypt = require('bcryptjs');
const passport = require('passport');
// Load User model
const User = require('../models/userModel');
const { forwardAuthenticated } = require('../config/auth');

//Logout

router.post('/logout', (req, res, next) => {
    if (req.session) {
        req.logout();
        req.session.destroy((err) => {
            if (err) {
                console.log(err);
            } else {
                res.clearCookie('session-id');
                res.json({
                    message: 'You are successfully logged out!'
                });
            }
        });
    } else {
        var err = new Error('You are not logged in!');
        err.status = 403;
        next(err);
    }
});
router.post("/Login", passport.authenticate("local", {
    successRedirect: '/',
    failureRedirect: '/Login',
    //failureFlash: true
}), function (req, res) {
    console.log(req)
})
// Login Page
router.post('/Register', function (req, res) {

    Users = new User({ email: req.body.email, username: req.body.username });

    User.register(Users, req.body.password, function (err, user) {
        if (err) {
            res.json({ success: false, message: "Your account could ot be saved. Error: ", err })
        } else {
            res.json({ success: true, message: "Your account has been saved" })
        }
    });
});*/
//router.get('/login', forwardAuthenticated, (req, res) => res.send('login'));

// Register Page
//router.get('/register', forwardAuthenticated, (req, res) => res.render('register'));
/*router.route("/").post(registerUser);
router.post("/login", authUser);
router.route("/profile").post(protect, updateUserProfile);*/

router.get("/error", auth.error);

// restrict index for logged in user only
router.get('/home', auth.home);

router.get("/user", auth.user);

// route to register page
router.get('/register', auth.register);

// route for register action
router.post('/register', auth.doRegister);

// route to login page
router.get('/auth/login', auth.login);

// route for login action
router.post('/login', auth.doLogin);

// route for logout action
router.get('/logout', auth.logout);

module.exports = router;

//module.exports = router;

//export default router